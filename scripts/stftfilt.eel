//printf("%d\n", $MEMBLKLIMIT);
filename = "../sgscSmall.wav";
x1 = 0;
x2 = $MEMBLKLIMIT;
suc = decodeWavFromFile(filename, ch, fs, frameCount, x1, x2);
(suc <= 0) ? printf("%d\n", suc) : printf("frameCountPerChannel = %d\n%d %d %d %d %d %d\n", frameCount, x1, x2, x3, x4, x5, x6);
cnt = 0;
while ($MEMBLKLIMIT * cnt <= x2 + frameCount) (cnt += 1; );
memlim = $MEMBLKLIMIT * cnt;
y1 = (x2 + frameCount < memlim) ? (x2 + frameCount) : (memlim);
y2 = (y1 + frameCount < memlim) ? (y1 + frameCount) : (memlim);
ofs = y2 + frameCount;
printf("frameCountPerChannel = %d\n%d %d %d %d %d %d\n", frameCount, y1, y2, y3, y4, y5, y6);
fftLen = 2048;
halfLen = fftLen / 2 + 1;
ovp = 4;
synWndLen = fftLen / ovp * 2;
analyWnd = ofs;
i = 0;
loop(fftLen,
analyWnd[i] = 1;
i+=1;);
synWnd = analyWnd + fftLen;
getCosineWindows(synWnd, synWndLen, "hann");
getAsymmetricCosine(analyWnd, synWnd, fftLen, fftLen / ovp, 1.8);
bufpos = idx = 0;
stftIndexLeft = synWnd + synWndLen;
stftIndexRight = stftIndexLeft + 50;
memreq = stftCheckMemoryRequirement(stftIndexLeft, fftLen, ovp, 1);
memreq = stftCheckMemoryRequirement(stftIndexRight, fftLen, ovp, 1);
stftStructLeft = stftIndexRight + 60;
stftStructRight = stftStructLeft + memreq;
requiredSamples = stftInit(stftIndexLeft, stftStructLeft);
requiredSamples = stftInit(stftIndexRight, stftStructRight);
stftSetAsymWnd(stftIndexLeft, stftStructLeft, analyWnd, synWnd);
stftSetAsymWnd(stftIndexRight, stftStructRight, analyWnd, synWnd);
dcReImSmps = 2;
inBufLeft = stftStructRight + memreq; // Pointer to memory
inBufRight = inBufLeft + fftLen + dcReImSmps;
outBuf1Left = inBufRight + fftLen + dcReImSmps;
outBuf1Right = outBuf1Left + fftLen + dcReImSmps;
bandEdge1=200;
bandEdge2=600;
adj=2 ^ (-120/6);
idx = 0;
writePtr = 0;
loop(frameCount,
inBufLeft[bufpos] = x1[idx];
inBufRight[bufpos] = x2[idx];
bufpos += 1;
bufpos >= requiredSamples ?
(
	arrayLen = stftForward(inBufLeft, stftIndexLeft, stftStructLeft, 1);
	arrayLen = stftForward(inBufRight, stftIndexRight, stftStructRight, 1);
	idx2=inBufLeft+bandEdge1;
	loop(bandEdge2-bandEdge1, idx2[0]*=adj; idx2+=1);
	idx2=inBufRight+bandEdge1;
	loop(bandEdge2-bandEdge1, idx2[0]*=adj; idx2+=1);
	error = stftBackward(inBufLeft, stftIndexLeft, stftStructLeft, 1);
	error = stftBackward(inBufRight, stftIndexRight, stftStructRight, 1);
	memcpy(y1 + writePtr, inBufLeft, requiredSamples);
	memcpy(y2 + writePtr, inBufRight, requiredSamples);
	writePtr += requiredSamples;
	bufpos = 0;
);
idx += 1;
);
printf("Finish\n");
suc = writeWavToFile("test.wav", 2, fs, frameCount, y1, y2);
//listSystemVariable();